package com.proyecto.controller;import com.proyecto.entity.*;import com.proyecto.service.*;import jakarta.servlet.http.*;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.core.Authentication;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.*;import java.util.List;@SessionAttributes({"datosUsuario","CODIGOUSUARIO","rolUsuario"})@Controllerpublic class LoginController {	@Autowired	private UsuarioService usuarioService;	/*@PostMapping("/home")	public String login(Usuario user, HttpSession session, HttpServletRequest request) {		Usuario usuario = usuarioService.login(user);		if (usuario == null) {			request.setAttribute("mensaje", "El usuario no existe");			return "login";		} else {			List<Rol> roles = usuarioService.traerRolesDeUsuario(usuario.getIdUsuario());			List<Opcion> menus = usuarioService.traerEnlacesDeUsuario(usuario.getIdUsuario());			List<Opcion> menusTipo1 = menus.stream().filter(p -> p.getTipo() == 1).toList();			List<Opcion> menusTipo2 = menus.stream().filter(p -> p.getTipo() == 2).toList();			List<Opcion> menusTipo3 = menus.stream().filter(p -> p.getTipo() == 3).toList();			List<Opcion> menusTipo4 = menus.stream().filter(p -> p.getTipo() == 4).toList();						session.setAttribute("objUsuario", usuario);			session.setAttribute("objMenusTipo1", menusTipo1);			session.setAttribute("objMenusTipo2", menusTipo2);			session.setAttribute("objMenusTipo3", menusTipo3);			session.setAttribute("objMenusTipo4", menusTipo4);			session.setAttribute("objRoles", roles);			return "index";		}	}*/	@GetMapping("home")	public String intranet(Authentication auth, HttpSession session, HttpServletRequest request) {		//obtener el nombre del usuario autenticado		String vLogin=auth.getName();		System.out.println("UsuariovLogin: "+vLogin);		//invocar al metodo validarSesion		Usuario bean=usuarioService.validarSesion(vLogin);		if (bean == null) {			request.setAttribute("mensaje", "El usuario no existe");			return "login";		} else {		//asignar valor a los atributos de tipo sesión		List<Rol> roles = usuarioService.traerRolDeUsuario(bean.getIdUsuario());		//listar los enlaces de acuerdo al tipo de menú		List<Opcion> menus = usuarioService.traerEnlacesDeUsuario(bean.getIdUsuario());		System.out.println("Menus: "+menus.get(0).getNombre());		List<Opcion> menusTipo1 = menus.stream().filter(p -> p.getTipo() == 1).toList();		List<Opcion> menusTipo2 = menus.stream().filter(p -> p.getTipo() == 2).toList();		List<Opcion> menusTipo3 = menus.stream().filter(p -> p.getTipo() == 3).toList();		List<Opcion> menusTipo4 = menus.stream().filter(p -> p.getTipo() == 4).toList();		//asignar valor a los atributos de tipo sesión		session.setAttribute("datosUsuario",bean.getNombreCompleto());		System.out.println("Datos Usuario: "+bean.getNombres() + " " + bean.getApellidos());		session.setAttribute("rolUsuario",roles);		System.out.println("Rol Usuario: "+roles.get(0).getNombre());		session.setAttribute("objMenusTipo1", menusTipo1);		System.out.println("Menus Tipo 1: "+menusTipo1.get(0).getNombre());		session.setAttribute("objMenusTipo2", menusTipo2);		System.out.println("Menus Tipo 2: "+menusTipo2.get(0).getNombre());		session.setAttribute("objMenusTipo3", menusTipo3);		System.out.println("Menus Tipo 3: "+menusTipo3.get(0).getNombre());		session.setAttribute("objMenusTipo4", menusTipo4);		System.out.println("Menus Tipo 4: "+menusTipo4.get(0).getNombre());			return "index";		}	}	@GetMapping("/logout")	public String logout(HttpSession session, HttpServletRequest request, HttpServletResponse response) {		session.invalidate();		response.setHeader("Cache-control", "no-cache");		response.setHeader("Expires", "0");		response.setHeader("Pragma", "no-cache");		request.setAttribute("mensaje", "El usuario salió de sesión");		return "login";	}}